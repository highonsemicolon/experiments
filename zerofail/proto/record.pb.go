// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: proto/record.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Record struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Col1          string                 `protobuf:"bytes,1,opt,name=col1,proto3" json:"col1,omitempty"`
	Col2          string                 `protobuf:"bytes,2,opt,name=col2,proto3" json:"col2,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Record) Reset() {
	*x = Record{}
	mi := &file_proto_record_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_proto_record_proto_rawDescGZIP(), []int{0}
}

func (x *Record) GetCol1() string {
	if x != nil {
		return x.Col1
	}
	return ""
}

func (x *Record) GetCol2() string {
	if x != nil {
		return x.Col2
	}
	return ""
}

type UpsertRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderID       string                 `protobuf:"bytes,1,opt,name=orderID,proto3" json:"orderID,omitempty"`
	Records       []*Record              `protobuf:"bytes,2,rep,name=records,proto3" json:"records,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertRequest) Reset() {
	*x = UpsertRequest{}
	mi := &file_proto_record_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertRequest) ProtoMessage() {}

func (x *UpsertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertRequest.ProtoReflect.Descriptor instead.
func (*UpsertRequest) Descriptor() ([]byte, []int) {
	return file_proto_record_proto_rawDescGZIP(), []int{1}
}

func (x *UpsertRequest) GetOrderID() string {
	if x != nil {
		return x.OrderID
	}
	return ""
}

func (x *UpsertRequest) GetRecords() []*Record {
	if x != nil {
		return x.Records
	}
	return nil
}

type UpsertResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpsertResponse) Reset() {
	*x = UpsertResponse{}
	mi := &file_proto_record_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpsertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertResponse) ProtoMessage() {}

func (x *UpsertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_record_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertResponse.ProtoReflect.Descriptor instead.
func (*UpsertResponse) Descriptor() ([]byte, []int) {
	return file_proto_record_proto_rawDescGZIP(), []int{2}
}

func (x *UpsertResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpsertResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_record_proto protoreflect.FileDescriptor

const file_proto_record_proto_rawDesc = "" +
	"\n" +
	"\x12proto/record.proto\x12\x06record\"0\n" +
	"\x06Record\x12\x12\n" +
	"\x04col1\x18\x01 \x01(\tR\x04col1\x12\x12\n" +
	"\x04col2\x18\x02 \x01(\tR\x04col2\"S\n" +
	"\rUpsertRequest\x12\x18\n" +
	"\aorderID\x18\x01 \x01(\tR\aorderID\x12(\n" +
	"\arecords\x18\x02 \x03(\v2\x0e.record.RecordR\arecords\"D\n" +
	"\x0eUpsertResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess2O\n" +
	"\rRecordService\x12>\n" +
	"\rUpsertRecords\x12\x15.record.UpsertRequest\x1a\x16.record.UpsertResponseb\x06proto3"

var (
	file_proto_record_proto_rawDescOnce sync.Once
	file_proto_record_proto_rawDescData []byte
)

func file_proto_record_proto_rawDescGZIP() []byte {
	file_proto_record_proto_rawDescOnce.Do(func() {
		file_proto_record_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_record_proto_rawDesc), len(file_proto_record_proto_rawDesc)))
	})
	return file_proto_record_proto_rawDescData
}

var file_proto_record_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_record_proto_goTypes = []any{
	(*Record)(nil),         // 0: record.Record
	(*UpsertRequest)(nil),  // 1: record.UpsertRequest
	(*UpsertResponse)(nil), // 2: record.UpsertResponse
}
var file_proto_record_proto_depIdxs = []int32{
	0, // 0: record.UpsertRequest.records:type_name -> record.Record
	1, // 1: record.RecordService.UpsertRecords:input_type -> record.UpsertRequest
	2, // 2: record.RecordService.UpsertRecords:output_type -> record.UpsertResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_record_proto_init() }
func file_proto_record_proto_init() {
	if File_proto_record_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_record_proto_rawDesc), len(file_proto_record_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_record_proto_goTypes,
		DependencyIndexes: file_proto_record_proto_depIdxs,
		MessageInfos:      file_proto_record_proto_msgTypes,
	}.Build()
	File_proto_record_proto = out.File
	file_proto_record_proto_goTypes = nil
	file_proto_record_proto_depIdxs = nil
}
